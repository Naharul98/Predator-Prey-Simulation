#BlueJ class context
comment0.target=Wolf
comment0.text=\r\n\ A\ simple\ model\ of\ a\ wolf.\r\n\ wolfs\ age,\ move,\ eat\ rabbits\ and\ deer,\ and\ die.\r\n\ implements\ the\ infectable\ interface\r\n\ @author\ A\ K\ M\ NAHARUL\ HAYAT\ and\ Noyan\ Raquib\ \r\n\ @version\ 2018.02.18\r\n
comment1.params=randomAge\ field\ location
comment1.target=Wolf(boolean,\ Field,\ Location)
comment1.text=\r\n\ Create\ a\ wolf.\ A\ wolf\ can\ be\ created\ as\ a\ new\ born\ (age\ zero\r\n\ and\ not\ hungry)\ or\ with\ a\ random\ age\ and\ food\ level.\r\n\ \r\n\ @param\ randomAge\ If\ true,\ the\ wolf\ will\ have\ random\ age\ and\ hunger\ level.\r\n\ @param\ field\ The\ field\ currently\ occupied.\r\n\ @param\ location\ The\ location\ within\ the\ field.\r\n
comment10.params=
comment10.target=int\ getBreedingAge()
comment10.text=\r\n\ @return\ the\ breeding\ age\ of\ the\ wolf\ -\ \r\n\ which\ is\ the\ age\ at\ which\ the\ wolf,\ upon\ reaching,\ can\ breed\r\n
comment11.params=
comment11.target=double\ getBreedingProbability()
comment11.text=\r\n\ @return\ the\ breeding\ probability\ of\ the\ wolf\r\n
comment12.params=
comment12.target=int\ getMaxLitterSize()
comment12.text=\r\n\ @return\ the\ maximum\ litter\ size\ the\ wolf\ can\ produce\ upon\ breeding\r\n
comment2.params=newWolves\ day
comment2.target=void\ act(java.util.List,\ java.lang.Boolean)
comment2.text=\r\n\ This\ is\ what\ the\ wolf\ does\ most\ of\ the\ time\:\ it\ hunts\ for\r\n\ rabbits\ and\ deer.\ In\ the\ process,\ it\ might\ breed,\ die\ of\ hunger,\r\n\ or\ die\ of\ old\ age.\r\n\ @param\ field\ The\ field\ currently\ occupied.\r\n\ @param\ newFoxes\ A\ list\ to\ return\ newly\ born\ Wolfs.\r\n\ @param\ day\ -\ the\ boolean\ of\ whether\ its\ day\ or\ not\r\n
comment3.params=
comment3.target=int\ getMaxAge()
comment3.text=\r\n\ Increase\ the\ age.\ This\ could\ result\ in\ the\ wolf's\ death.\r\n
comment4.params=
comment4.target=void\ incrementInfection()
comment4.text=\r\n\ Decrease\ the\ amount\ of\ time\ the\ animal\ has\ left\ to\ live\ after\r\n\ being\ infected,\ if\ this\ becomes\ 0\ the\ animal\ dies\r\n
comment5.params=
comment5.target=void\ incrementHunger()
comment5.text=\r\n\ Make\ this\ wolf\ more\ hungry.\ This\ could\ result\ in\ the\ wolf's\ death.\r\n
comment6.params=
comment6.target=Location\ findFood()
comment6.text=\r\n\ Look\ for\ rabbits\ and\ deers\ adjacent\ to\ the\ current\ location.\r\n\ Only\ the\ first\ live\ rabbit/deer\ is\ eaten.\r\n\ @return\ Where\ food\ was\ found,\ or\ null\ if\ it\ wasn't.\r\n
comment7.params=newWolf
comment7.target=void\ giveBirth(java.util.List)
comment7.text=\r\n\ Check\ whether\ or\ not\ this\ wolf\ is\ to\ give\ birth\ at\ this\ step.\r\n\ New\ births\ will\ be\ made\ into\ free\ adjacent\ locations.\r\n\ @param\ newWolf\ A\ list\ to\ return\ newly\ born\ wolfs.\r\n
comment8.params=
comment8.target=void\ spreadInfection()
comment8.text=\r\n\ If\ there\ is\ another\ rabbit\ in\ the\ adjacent\ square,\ then\ there\ is\ a\ chance\ the\r\n\ adjacent\ animal\ could\ become\ infected\ according\ to\ infection\ spread\ probability\r\n
comment9.params=
comment9.target=boolean\ canBreed()
comment9.text=\r\n\ This\ method\ checks\ if\ a\ wolf\ can\ breed\r\n\ A\ wolf\ can\ breed\ when\ it\ moves\ and\ encounters\ another\ wolf\ which\ happens\ to\ be\ of\ the\ opposite\ sex\r\n\ @return\ true\ if\ the\ wolf\ can\ breed,\ otherwise\ false\r\n
numComments=13
